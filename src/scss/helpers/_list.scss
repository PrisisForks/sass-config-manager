// Return list-map from `$list` and ensure input list-map is list-of-lists
//
// @function list-map-check
//
// @access public
//
// @param $list {list}
//
// @return      {list-map}
@function list-map-check($list) {
  @if length($list) == 2 and length(nth($list, 1)) == 1 {
    @return append((), $list, "comma");
  }

  @return $list;
}

// Extracts a slice of a list
//
// @function list-slice
//
// @access private
//
// @param  $list  {list}   The list to extract
// @param  $start {number} The start index to extract
// @param  $end   {number} The end index to extract
//
// @return        {list}   The extracted list
@function list-slice($list, $start: 1, $end: length($list)) {
  $output: ();

  @if $start >= 1 and $end >= $start {
    @for $i from $start through $end {
      $output: append($output, nth($list, $i));
    }
  }

  @return $output;
}
